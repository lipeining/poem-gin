
// func setupRouter() *gin.Engine {
// 	r := gin.Default()
// 	r.GET("/ping", func(c *gin.Context) {
// 		c.String(200, "pong")
// 	})
// 	// 2.绑定路由规则，执行的函数
// 	// gin.Context，封装了request和response
// 	r.GET("/", func(c *gin.Context) {
// 		fmt.Printf("config %v", config.Config)
// 		// c.String(http.StatusOK, "hello World!")
// 		c.JSON(http.StatusOK, config.Config)
// 	})
// 	r.GET("/tbl_tmp_id", func(c *gin.Context) {
// 		exisit, err := engine.IsTableExist(TblTmpID{})
// 		if err != nil {
// 			fmt.Println(err)
// 		}
// 		if exisit {
// 			err = engine.DropTables(TblTmpID{})
// 			if err != nil {
// 				fmt.Println(err)
// 			}
// 		}
// 		err = engine.CreateTables(TblTmpID{})
// 		if err != nil {
// 			fmt.Println(err)
// 		}
// 		loadDataCommand := "load data infile 'C:/ProgramData/MySQL/MySQL Server 5.7/Uploads/base.txt' replace into table test.tbl_tmp_id;"
// 		results, err := engine.Query(loadDataCommand)
// 		if err != nil {
// 			fmt.Println(err)
// 		}
// 		fmt.Println(results)
// 		c.JSON(http.StatusOK, results)
// 	})
// 	r.GET("/tmp_id", func(c *gin.Context) {
// 		tblTmpIDName := c.DefaultQuery("tmp_name", "tbl_tmp_id")
// 		ctb := sqlbuilder.NewCreateTableBuilder()
// 		fullTblTmpIDName := database + "." + tblTmpIDName
// 		ctb.CreateTable(fullTblTmpIDName).IfNotExists()
// 		ctb.Define("id", "BIGINT(20)", "NOT NULL", "PRIMARY KEY", `COMMENT "id"`)
// 		ctb.Option("DEFAULT CHARACTER SET", "utf8mb4")
// 		fmt.Println(ctb)
// 		// c.JSON(http.StatusOK, ctb)
// 		// c.String(http.StatusOK, ctb.String())
// 		insertCommand := ctb.String()
// 		results, err := engine.Query(insertCommand)
// 		if err != nil {
// 			fmt.Println(err)
// 		}
// 		fmt.Println("create table results", results)
// 		loadDataCommand := "load data infile " + "'" + securePivFile + "'" + " replace into table " + fullTblTmpIDName + ";"
// 		results, err = engine.Query(loadDataCommand)
// 		if err != nil {
// 			fmt.Println(err)
// 		}
// 		fmt.Println("load data results", results)
// 		c.JSON(http.StatusOK, results)
// 	})
// 	r.GET("new_tbl", func(c *gin.Context) {
// 		// http://localhost:8000/new_tbl?tmp_name=abc&tbl_name=user&cols=province,city,name&times=create_time,update_time,delete_time
// 		// http://localhost:8000/new_tbl?tmp_name=abc&tbl_name=food&cols=status,voted,name&times=create_time,update_time,delete_time
// 		tblTmpIDName := c.DefaultQuery("tmp_name", "tbl_tmp_id")
// 		fullTblTmpIDName := database + "." + tblTmpIDName
// 		tblName := c.Query("tbl_name")
// 		fullTblName := database + "." + tblName
// 		cols := c.Query("cols")
// 		columns := strings.Split(cols, ",")
// 		times := c.Query("times")
// 		timeCols := strings.Split(times, ",")
// 		insertList := make([]string, 0)
// 		insertList = append(insertList, "INSERT INTO "+fullTblName+" SELECT ")
// 		insertCols := make([]string, 0)
// 		insertCols = append(insertCols, "id")
// 		ctb := sqlbuilder.NewCreateTableBuilder()
// 		ctb.CreateTable(fullTblName).IfNotExists()
// 		ctb.Define("id", "BIGINT(20)", "NOT NULL", "PRIMARY KEY", "AUTO_INCREMENT", `COMMENT "id"`)
// 		for _, column := range columns {
// 			insertCols = append(insertCols, " uuid() ")
// 			ctb.Define(column, "VARCHAR(255)", "NOT NULL", `COMMENT "`+column+`"`)
// 		}
// 		for _, column := range timeCols {
// 			// insertCols = append(insertCols, " NOW() ")
// 			insertCols = append(insertCols, " date_add(NOW(), interval FLOOR(1 + (RAND() * 10)) month) ")
// 			ctb.Define(column, "datetime", "NOT NULL", `COMMENT "`+column+`"`)
// 		}
// 		insertList = append(insertList, strings.Join(insertCols, ","))
// 		insertList = append(insertList, " FROM "+fullTblTmpIDName+";")
// 		ctb.Option("DEFAULT CHARACTER SET", "utf8mb4")
// 		fmt.Println(ctb)
// 		insertCommand := ctb.String()
// 		results, err := engine.Query(insertCommand)
// 		if err != nil {
// 			fmt.Println(err)
// 		}
// 		fmt.Println("create table results", results)
// 		// 	INSERT INTO tbl_user
// 		// 	SELECT
// 		// 	  id,
// 		// 	  uuid(),
// 		// 	  CONCAT('userNickName', id),
// 		// 	  FLOOR(Rand() * 1000),
// 		// 	  FLOOR(Rand() * 100),
// 		// 	  NOW()
// 		// 	FROM
// 		//   tbl_tmp_id;
// 		insertDataCommand := strings.Join(insertList, "")
// 		results, err = engine.Query(insertDataCommand)
// 		if err != nil {
// 			fmt.Println(err)
// 		}
// 		fmt.Println("insert data results", results)
// 		c.JSON(http.StatusOK, results)
// 	})
// 	r.GET("build_tmp_table", func(c *gin.Context) {
// 		// http://localhost:8000/build_tmp_table?tmp_name=efg
// 		tblTmpIDName := c.DefaultQuery("tmp_name", "tbl_tmp_id")
// 		cols := make([]Column, 0)
// 		createTableCommand, _, err := buildCreateTableCommand(tblTmpIDName, tblTmpIDName, cols)
// 		results, err := engine.Query(createTableCommand)
// 		if err != nil {
// 			fmt.Println(err)
// 		}
// 		fmt.Println("create table results", results)
// 		loadIntoTableCommand := buildLoadIntoTableCommand(tblTmpIDName)
// 		results, err = engine.Query(loadIntoTableCommand)
// 		if err != nil {
// 			fmt.Println(err)
// 		}
// 		fmt.Println("load into data results", results)
// 		c.JSON(http.StatusOK, results)
// 	})
// 	r.GET("build_table", func(c *gin.Context) {
// 		// http://localhost:8000/build_table?tmp_name=efg&tbl_name=teacher&cols=province,city,name&times=create_time,update_time,delete_time
// 		// http://localhost:8000/build_table?tmp_name=efg&tbl_name=student&cols=province,city,name&times=create_time,update_time,delete_time
// 		tblTmpIDName := c.DefaultQuery("tmp_name", "tbl_tmp_id")
// 		tblName := c.Query("tbl_name")
// 		cols := strings.Split(c.Query("cols"), ",")
// 		timeCols := strings.Split(c.Query("times"), ",")
// 		columns := make([]Column, 0)
// 		for _, col := range cols {
// 			columns = append(columns, Column{
// 				name: col,
// 				t:    "string",
// 			})
// 		}
// 		for _, col := range timeCols {
// 			columns = append(columns, Column{
// 				name: col,
// 				t:    "datetime",
// 			})
// 		}

// 		createTableCommand, insertDataCommand, err := buildCreateTableCommand(tblTmpIDName, tblName, columns)
// 		results, err := engine.Query(createTableCommand)
// 		if err != nil {
// 			fmt.Println(err)
// 		}
// 		fmt.Println("create table results", results)
// 		results, err = engine.Query(insertDataCommand)
// 		if err != nil {
// 			fmt.Println(err)
// 		}
// 		fmt.Println("insert into data results", results)
// 		c.JSON(http.StatusOK, results)
// 		// 	INSERT INTO tbl_user
// 		// 	SELECT
// 		// 	  id,
// 		// 	  uuid(),
// 		// 	  CONCAT('userNickName', id),
// 		// 	  FLOOR(Rand() * 1000),
// 		// 	  FLOOR(Rand() * 100),
// 		// 	  NOW()
// 		// 	FROM
// 		//   tbl_tmp_id;
// 	})
// 	r.GET("infile", func(c *gin.Context) {
// 		// http://localhost:8000/infile?filename=counter.txt&num=1000000
// 		filename := c.DefaultQuery("filename", "counter.txt")
// 		numInput := c.DefaultQuery("num", "1000000")
// 		num, ok := strconv.Atoi(numInput)
// 		if ok != nil {
// 			num = 1000000
// 		}
// 		fmt.Println(filename, num)
// 		writeInfile(filename, num)
// 		c.String(http.StatusOK, "ok")
// 	})
// 	r.GET("import_tang_author", func(c *gin.Context) {
// 		// http://localhost:8000/import
// 		filename := c.DefaultQuery("dynasty", "tang")
// 		fmt.Println(filename)
// 		c.String(http.StatusOK, "ok")
// 	})
// 	return r
// }
